name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Create deployment archive
        run: |
          set -euo pipefail
          git clean -fdx
          git reset --hard
          git archive --format=tar HEAD | gzip > release.tar.gz

      - name: Prepare SSH key (if provided)
        if: ${{ secrets.SSH_KEY != '' }}
        id: prepare_ssh
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          KEY_CONTENT="${{ secrets.SSH_KEY }}"
          if echo "$KEY_CONTENT" | grep -q "BEGIN OPENSSH PRIVATE KEY"; then
            echo "$KEY_CONTENT" | tr -d '\r' > ~/.ssh/deploy_key
          else
            echo "$KEY_CONTENT" | tr -d '\r\n' | base64 -d > ~/.ssh/deploy_key || {
              echo "SSH_KEY secret does not look like an OpenSSH private key or base64-encoded key." >&2
              exit 1
            }
          fi
          chmod 600 ~/.ssh/deploy_key

      - name: Add known_hosts
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          if [ -n "${{ secrets.SSH_HOST }}" ]; then
            ssh-keyscan -T 5 -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
          fi

      - name: Upload archive to server (key)
        if: ${{ secrets.SSH_KEY != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key_path: ~/.ssh/deploy_key
          source: release.tar.gz
          target: /tmp/stripe-deposit.tar.gz

      - name: Upload archive to server (password)
        if: ${{ secrets.SSH_KEY == '' && secrets.SSH_PASSWORD != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: release.tar.gz
          target: /tmp/stripe-deposit.tar.gz

      - name: Deploy on server (key)
        if: ${{ secrets.SSH_KEY != '' }}
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key_path: ~/.ssh/deploy_key
          script: |
            set -euo pipefail
            DEPLOY_DIR="${{ secrets.REMOTE_DEPLOY_DIR }}"
            if [ -z "$DEPLOY_DIR" ]; then
              DEPLOY_DIR="${{ vars.REMOTE_DEPLOY_DIR }}"
            fi
            if [ -z "$DEPLOY_DIR" ]; then
              DEPLOY_DIR="/root/deposit-stripe"
            fi
            mkdir -p "$DEPLOY_DIR"
            tar -xzf /tmp/stripe-deposit.tar.gz -C "$DEPLOY_DIR" --strip-components=1
            rm -f /tmp/stripe-deposit.tar.gz
            cd "$DEPLOY_DIR"
            if command -v docker >/dev/null 2>&1; then
              if docker compose version >/dev/null 2>&1; then
                docker compose up -d --build
              else
                docker-compose up -d --build
              fi
            else
              if ! command -v node >/dev/null 2>&1; then
                echo "Node.js is required on the target host" >&2
                exit 1
              fi
              if [ -f package-lock.json ]; then
                npm ci --omit=dev
              else
                npm install --production
              fi
              if command -v pm2 >/dev/null 2>&1; then
                pm2 start npm --name stripe-deposit -- start || pm2 restart stripe-deposit
              else
                nohup npm start >/var/log/stripe-deposit.log 2>&1 &
              fi
            fi

      - name: Deploy on server (password)
        if: ${{ secrets.SSH_KEY == '' && secrets.SSH_PASSWORD != '' }}
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -euo pipefail
            DEPLOY_DIR="${{ secrets.REMOTE_DEPLOY_DIR }}"
            if [ -z "$DEPLOY_DIR" ]; then
              DEPLOY_DIR="${{ vars.REMOTE_DEPLOY_DIR }}"
            fi
            if [ -z "$DEPLOY_DIR" ]; then
              DEPLOY_DIR="/root/deposit-stripe"
            fi
            mkdir -p "$DEPLOY_DIR"
            tar -xzf /tmp/stripe-deposit.tar.gz -C "$DEPLOY_DIR" --strip-components=1
            rm -f /tmp/stripe-deposit.tar.gz
            cd "$DEPLOY_DIR"
            if command -v docker >/dev/null 2>&1; then
              if docker compose version >/dev/null 2>&1; then
                docker compose up -d --build
              else
                docker-compose up -d --build
              fi
            else
              if ! command -v node >/dev/null 2>&1; then
                echo "Node.js is required on the target host" >&2
                exit 1
              fi
              if [ -f package-lock.json ]; then
                npm ci --omit=dev
              else
                npm install --production
              fi
              if command -v pm2 >/dev/null 2>&1; then
                pm2 start npm --name stripe-deposit -- start || pm2 restart stripe-deposit
              else
                nohup npm start >/var/log/stripe-deposit.log 2>&1 &
              fi
            fi
